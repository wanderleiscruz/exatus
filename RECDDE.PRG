#include "fivewin.ch"
static oWnd,oTimer1
static oct

PROCEDURE MAIN()
PUBLIC oFontsay,oClient
PUBLIC oEmp2,emp2,oSay
extern DBFCDX
RDDSETDEFAULT("DBFCDX")

SET DATE FRENCH
SET CENTURY ON
SET EPOCH TO 1999
DEFINE FONT oFontsay size 0,-12
DEFINE BRUSH oBrush COLOR nRGB(255,255,255)
DEFINE WINDOW oWnd FROM 3, 6 TO 20, 70 TITLE "Recebe DDE" BRUSH oBrush
CONTADOR=0
oEmp2="Tecle o Botao Esquerdo do Mouse para Parar"
oEmp3="Recebidas:"
PRIMEIRA2=0
emp2=oemp2
@ 2,1 GET oEmp2 VAR EMP2 FONT oFontsay NO MODIFY OF oWnd NOBORDER SIZE 400,15
@ 6,1 GET oEmp3 SIZE 400,15 OF oWnd NOBORDER
@ 6,20 GET osay VAR CONTADOR SIZE 400,15 OF oWnd NOBORDER
LOCALNOT3="\BC\NOTDADOS\"
IF FILE("ARQPARBC.DAT")
  RESTORE FROM ARQPARBC.DAT ADDITIVE
ENDIF
LOCNOT3=ALLTRIM(LOCALNOT3)
IF !VERDIRETORIO(LOCNOT3)
  MSGINFO("Nao foi possivel criar algum diretorio !","QUOTAS")
  RETURN
ENDIF
CRIARQ()
INDICES()
ACTIVATE WINDOW oWnd ICONIZED ON RIGHT CLICK (oWnd:End(),oCliente:End(),oCliente:=nil,QUIT) ON INIT(ROTINAS())
CLOSE DATABASE
RETURN NIL

PROCEDURE ROTINAS()
local n
CLOSE DATABASE
oClient = TDDEMLClient():New()
if !oClient:Connect( "BC", "COT")
   MsgInfo( "Nao existe servidor de DDE","")
   QUIT
   RETURN
endif
SELE 1
IF !USEREDE(LOCNOT3+"TAXAS.DBF",.F.,10,"TAXAS")
  RETURN
ENDIF
SELE 2
IF !USEREDE(LOCNOT3+"ATIVOS.DBF",.F.,10,"ATIVOS")
  RETURN
ENDIF
SELE 3
IF !USEREDE(LOCNOT3+"DELAY.DBF",.F.,10,"DELAY")
  RETURN
ENDIF
ANTES="A linha esta em branco"
ARQS=FCREATE("TESTE.TXT",0)
DO WHILE .T.
  SysRefresh()
  CURSORARROW()
  LINHA=oClient:Request("PETR4.ULT")+chr(13)+chr(10)
  fwrite(arqs,linha,len(linha))
  IF LINHA#"N/A"
    ENC=AT("COMM",LINHA)
    IF ENC#0
      LINHA=LEFT(LINHA,ENC+4)
      ELSE
      ENC=AT("ACAO",LINHA)
      LINHA=LEFT(LINHA,ENC+4)
    ENDIF
    IF LINHA#ANTES
      CURSORWAIT()
      CONTADOR+=1
*      ATUACOTAS(LINHA)
      ANTES=LINHA
    ENDIF
  ENDIF
 oClient:Request( "ATIVO" )
ENDDO
FCLOSE(ARQS)
RETURN

FUNCTION USEREDE
PARA ARQU,EXUSE,TEMPO,ARQ2,QZ
PRIVATE SEMPRE
DEFAULT QZ:="N"
ARQU=UPPER(TRIM(ARQU))
IF AT("NOTAZAP",ARQU)#0 .OR. QZ="S" .OR. AT("NOTAOUT",ARQU)#0
  AB=.T.
  ELSE
  AB=.F.
ENDIF
IF (ARQ2=Nil)
  ARQ2:=ARQU
ENDIF
IF AT(".",ARQ2)>0
  ARQ2=LEFT(ARQ2,5)
ENDIF
IF AT(":",ARQ2)>0
  ARQ2="ARQS"
ENDIF
M->SEMPRE = (M->TEMPO=0)
IF AT(".",ARQU)>0
  ARQIND=TRIM(LEFT(ARQU,AT(".",ARQU)-1))+".KEY"
  ELSE
  ARQIND=TRIM(ARQU)+".KEY"
ENDIF
DO WHILE (M->SEMPRE .OR. M->TEMPO>0)
  IF AB
     IF EXUSE
        USE &ARQU EXCLUSIVE ALIAS (ARQ2) VIA "DBFNTX"
      ELSE
        USE &ARQU ALIAS (ARQ2) VIA "DBFNTX"
     ENDIF
  ELSE
    IF EXUSE
      USE &ARQU EXCLUSIVE ALIAS (ARQ2)
    ELSE
      USE &ARQU ALIAS (ARQ2)
    ENDIF
  ENDIF
  IF .NOT. NETERR()
    IF FILE(ARQIND)
      SET INDEX TO &ARQIND
      SET ORDER TO 1
    ENDIF
    RETURN .T.
  ENDIF
  M->TEC=INKEY(1)
  M->TEMPO=M->TEMPO-1
  IF M->TEC=27
    EXIT
  ENDIF
ENDDO
RETURN .F.

FUNCTION REGLOCK
PARA TEMPO
PRIVATE SEMPRE
IF RLOCK()
  RETURN .T.
ENDIF
M->SEMPRE=(M->TEMPO=0)
while (M->SEMPRE .OR. M->TEMPO>0)
  IF RLOCK()
    RETURN .T.
  ENDIF
  M->TEC=INKEY(1)
  M->TEMPO=M->TEMPO - 0.5
  IF M->TEC=27
    EXIT
  ENDIF
ENDDO
RETURN .F.

FUNCTION PUTREC()
IF !REGLOCK()
  MSGINFO("Registro sendo utilizado por outro Usuário","Tente Novamente")
  RETURN .T.
ENDIF
DECLARE _var1 [FCOUNT()]
AFIELDS(_var1)
FOR t = 1 TO FCOUNT()
  _var4 = "Z"+SUBS(_var1 [t],2,LEN(ALLTRIM(_var1 [t]))-1)
  _var5 = _var1 [t]
  AZ=TYPE(_VAR5)
  AZ1=TYPE(_VAR4)
  REPLACE &_var5 WITH &_var4
NEXT t
UNLOCK
RETURN(.T.)

PROCEDURE CRIARQ()
ARQ=LOCNOT3+"ATIVOS.DBF"
IF !FILE(ARQ)
  mat_stru={}
  AADD(mat_stru,{"CODIGO","C",12,0})
  AADD(mat_stru,{"DESC","C",80,0})
  AADD(mat_stru,{"GRUPO","C",50,0})
  AADD(mat_stru,{"HORAULTNEG","C",6,0})
  AADD(mat_stru,{"DTULTNEG","D",8,0})
  AADD(mat_stru,{"ULTNEG","N",19,8})
  AADD(mat_stru,{"OSCILA","N",19,8})
  AADD(mat_stru,{"PROFCOMPRA","N",19,8})
  AADD(mat_stru,{"QUOFCOMPRA","N",19,0})
  AADD(mat_stru,{"PROFVENDA","N",19,8})
  AADD(mat_stru,{"QUOFVENDA","N",19,0})
  AADD(mat_stru,{"PRMAXIMO","N",19,8})
  AADD(mat_stru,{"PRMINIMO","N",19,8})
  AADD(mat_stru,{"PRABERTURA","N",19,8})
  AADD(mat_stru,{"PRMEDIO","N",19,8})
  AADD(mat_stru,{"PRFECANT","N",19,8})
  AADD(mat_stru,{"NRNEG","N",19,0})
  AADD(mat_stru,{"QTDULTNEG","N",19,0})
  AADD(mat_stru,{"QTDTOTAL","N",19,0})
  AADD(mat_stru,{"VOLUME","N",19,0})
  AADD(mat_stru,{"VOLUMETOT","N",19,0})
  AADD(mat_stru,{"PARV","N",19,8})
  AADD(mat_stru,{"PARC","N",19,8})
  AADD(mat_stru,{"USUARIOS","C",2000,0})
  AADD(mat_stru,{"GRAFICO","C",1,0})
  DBCREATE(ARQ,mat_stru)
ENDIF
RETURN

PROCEDURE ATUACOTAS(LINHA)
WLI=LINHA
oSay:Refresh()
ZTULTNEG=DATE()
COLU=AT(CHR(9),WLI)
ZODATI=LEFT(WLI,COLU-1)
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZLTNEG=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZSCILA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZROFCOMPRA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZUOFCOMPRA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZROFVENDA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZUOFVENDA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRMAXIMO=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRMINIMO=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRABERTURA=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRFECANT=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZOLUME=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRMEDIO=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZORAULTNEG=LEFT(WLI,COLU-1)
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZRNEG=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZTDULTNEG=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZTDTOTAL=VAL(LEFT(WLI,COLU-1))
WLI=SUBSTR(WLI,COLU+1,500)
COLU=AT(CHR(9),WLI)
ZOLUMETOT=VAL(LEFT(WLI,COLU-1))
ZARV=0
ZARC=0
ZODATI1=ALLTRIM(ZODATI)
ZODATI=ZODATI1+SPACE(12-LEN(ZODATI1))
ZODATI1=ZODATI
SELE 2
SEEK ZODATI1
IF EOF()
  ADIREG(0)
  UNLOCK
ENDIF
ZRAFICO=GRAFICO
IF REGLOCK(10)
  ZODIGO=ZODATI1
  ZESC=DESC
  ZRUPO=GRUPO
  ZRAFICO=GRAFICO
  ZSUARIOS=USUARIOS
  PUTREC()
ENDIF
UNLOCK
COMMIT
SELE 1
IF ZRAFICO="S"
  SEEK ZODATI1+DTOS(ZTULTNEG)
  IF EOF()
    ADIREG(0)
    PUTREC()
    ELSE
    IF DTULTNEG#ZTULTNEG .OR. ULTNEG#ZLTNEG .OR. OSCILA#ZSCILA;
      .OR. PROFCOMPRA#ZROFCOMPRA .OR. PROFVENDA#ZROFVENDA ;
      .OR. PRMAXIMO#ZRMAXIMO .OR. PRMINIMO#ZRMINIMO;
      .OR. NRNEG#ZRNEG
      ADIREG(0)
      PUTREC()
      ELSE
      IF REGLOCK(10)
        PUTREC()
      ENDIF
    ENDIF
  ENDIF
ENDIF
SELE 3
SEEK ZODATI1+DTOS(ZTULTNEG)+ZORAULTNEG
IF EOF()
  ADIREG(0)
  PUTREC()
ENDIF
RETURN

PROCEDURE VERDIRETORIO(DIRET)
M->LOCAL2=TRIM("/"+CURDIR())
M->LOCAL1=DIRET
IF !lCHDIR(M->LOCAL1)
  IF !lMKDIR(M->LOCAL1)
    RETURN .F.
  ENDIF
ENDIF
LCHDIR(M->LOCAL2)
RETURN .T.

FUNCTION ADIREG
PARA TEMPO
PRIVATE SEMPRE
APPEND BLANK
IF .NOT. NETERR()
  RETURN .T.
ENDIF
M->SEMPRE=(M->TEMPO=0)
DO WHILE (M->SEMPRE .OR. M->TEMPO>0)
  APPEND BLANK
  IF .NOT. NETERR()
    RETURN .T.
  ENDIF
  M->TEC=INKEY(1)
  M->TEMPO=M->TEMPO - 0.5
  IF M->TEC=27
    EXIT
  ENDIF
ENDDO
RETURN .F.

FUNCTION INDICES()
CLOSE DATABASE
ARQ=LOCNOT3+"ATIVOS.KEY"
IF .NOT. FILE(ARQ) .OR. PCOUNT()<>0
  IF .NOT. USEREDE(LOCNOT3+"ATIVOS.DBF",.T.,10,"TIPO01")
    MESSAGEBEEP(-1);MESSAGEBEEP(-1);MESSAGEBEEP(-1)
    MSGStop("Não foi possível acesso ao arquivo","OPER.DBF")
    QUIT
  ENDIF
  PACK
  MsgMeter( { | oMeter, oText, oDlg, lEnd |                    ;
      INDIC( oMeter, oText, oDlg, @lEnd,6 )}, ;
      "Ativos", "Manutenção")
ENDIF
ARQ=LOCNOT3+"TAXAS.KEY"
IF .NOT. FILE(ARQ) .OR. PCOUNT()<>0
  IF .NOT. USEREDE(LOCNOT3+"TAXAS.DBF",.T.,10,"TIPO01")
    MESSAGEBEEP(-1);MESSAGEBEEP(-1);MESSAGEBEEP(-1)
    MSGStop("Não foi possível acesso ao arquivo","OPER.DBF")
    QUIT
  ENDIF
  PACK
  MsgMeter( { | oMeter, oText, oDlg, lEnd |                    ;
      INDIC( oMeter, oText, oDlg, @lEnd,7 )}, ;
      "Taxas", "Manutenção")
ENDIF
CLOSE DATABASE
ARQ=LOCNOT3+"DELAY.KEY"
IF .NOT. FILE(ARQ) .OR. PCOUNT()<>0
  IF .NOT. USEREDE(LOCNOT3+"TAXAS.DBF",.T.,10,"TIPO01")
    MESSAGEBEEP(-1);MESSAGEBEEP(-1);MESSAGEBEEP(-1)
    MSGStop("Não foi possível acesso ao arquivo","OPER.DBF")
    QUIT
  ENDIF
  PACK
  MsgMeter( { | oMeter, oText, oDlg, lEnd |                    ;
      INDIC( oMeter, oText, oDlg, @lEnd,10 )}, ;
      "Taxas-Delay", "Manutenção")
ENDIF
CLOSE DATABASE
RETURN

FUNCTION INDIC( oMeter, oText, oDlg, lEnd,CHAVE )
oMeter:nTotal := lastrec()
IF CHAVE=1
  INDEX ON CODIGO TAG CODIGO TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=2
  INDEX ON DTOS(DATA)+TIPO+STRZERO(CODI,5) TAG CD TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=3
  INDEX ON CODIGO TAG CD TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=4
  INDEX ON CODIGO TAG CD TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=5
  INDEX ON IDNOT TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=6
  INDEX ON CODIGO TAG CD TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=7
  INDEX ON CODATI+DTOS(DTULTNEG)+HORAULTNEG TAG COD DESC TO &ARQ EVAL( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=8
  INDEX ON IDNOT TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=9
  INDEX ON CODIGO TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
  ELSEIF CHAVE=10
  INDEX ON HORAULTNEG TO &ARQ EVAL ( oMeter:Set( recno() ), SysRefresh(), !lEnd )
ENDIF
RETURN (NIL)
